sp {propose*initialize-soar-blokus
   (state <s> ^disable yes ^superstate nil
             -^init done)
-->
   (<s> ^operator <o> + >)
#   (<o> ^name initialize-soar-blokus)
}
sp {declare*top-state*name
   (state <s> ^operator <o> +)
   (<o> ^name end-init)
-->
   (<o> ^state-name soar-blokus)
}

sp {propose*construct-board
   (state <s> ^name init)
-->
   (<s> ^operator <o> +)
   (<o> ^name construct-board)
}

sp {apply*construct-board*create*board
   (state <s> ^name init
              ^operator.name construct-board
              ^top-state <ts>)
-->
   # create root board structure and add name
   (<ts> ^board <b>)
}
# add the 400 squares on the board and indicate that they have no color
gp {apply*construct-board*create*square
   (state <s> ^name init
              ^operator.name construct-board
              ^top-state <ts>)
   (<ts> ^board <board>)
-->
   (<board> ^square <square>)
   (<square> ^x [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19]
             ^y [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19]
             ^color none)
}

# propose to construct the hand
sp {propose*construct-hand
   (state <s> ^name init
              ^top-state <ts>)
   # wait until the board is created
   # actually the hand doesn't depend on the board, but this way we can enforce that we know the last thing in init
# TODO we can get rid of this now that we have init.soar
   (<ts> ^board.square(^x 19 ^y 19))
-->
   (<s> ^operator <o> + >)
   (<o> ^name construct-hand)
}
# construct the root hand structure
sp {apply*construct-hand
   (state <s> ^name init
              ^top-state <ts>
              ^operator.name construct-hand)
-->
   (<ts> ^hand <hand>)
}
# names from http://www.c2strategy.wordpress.com/2011/04/10/piece-names/
# construct block l5
sp {apply*construct-hand*l5
   (state <s> ^name init
              ^top-state.hand <hand>
              ^operator.name construct-hand)
-->
   # add the block
   (<hand> ^block <l5>)
   # name it and create orientations
   # TODO color?
   (<l5> ^name l5 ^symmetry reflection r2 ^orientation <O1>)
   # add squares to first orientation
   (<O1> ^base yes ^square <O1S1> <O1S2> <O1S3> <O1S4> <O1S5>)
   # fill in square info
   (<O1S1> ^x 0 ^y 0)
   (<O1S2> ^x 1 ^y 0)
   (<O1S3> ^x 2 ^y 0)
   (<O1S4> ^x 3 ^y 0)
   (<O1S5> ^x 4 ^y 0)
}
# construct block O
sp {apply*construct-hand*O
   (state <s> ^name init
              ^top-state.hand <hand>
              ^operator.name construct-hand)
-->
   # add the block
   (<hand> ^block <O>)
   # name it and create orientations
   # TODO color?
   (<O> ^name O ^symmetry reflection r2 r1 ^orientation <O1>)
   # add squares to orientation
   (<O1> ^base yes ^square <S1> <S2> <S3> <S4>)
   # fille in square info
   (<S1> ^x 0 ^y 0)
   (<S2> ^x 0 ^y 1)
   (<S3> ^x 1 ^y 0)
   (<S4> ^x 1 ^y 1)
}
# construct block Z4
sp {apply*construct-hand*Z4
   (state <s> ^name init
              ^top-state.hand <hand>
              ^operator.name construct-hand)
-->
   # add the block
   (<hand> ^block <Z4>)
   # name it and create orientations
   # TODO color?
   (<Z4> ^name Z4 ^symmetry r2 ^orientation <O1>)
   # add squares to orientation
   (<O1> ^base yes ^square <S1> <S2> <S3> <S4>)
   # fill in square info
   (<S1> ^x 0 ^y 0)
   (<S2> ^x 0 ^y 1 )
   (<S3> ^x -1 ^y 1)
   (<S4> ^x -1 ^y 2)
}

# construct block V3
sp {apply*construct-hand*V3
   (state <s> ^name init
              ^top-state.hand <hand>
              ^operator.name construct-hand)
-->
   # add the block
   (<hand> ^block <V3>)
   # name it anc create orientation
   # TODO color?
   (<V3> ^name V3 ^symmetry reflection ^orientation <O1>)
   # add square to orientation
   (<O1> ^base yes ^square <S1> <S2> <S3>)
   # fill in square info
   (<S1> ^x 0 ^y 0)
   (<S2> ^x 0 ^y 1)
   (<S3> ^x -1 ^y 1)
}

# construct block L4
sp {apply*construct-hand*L4
   (state <s> ^name init
              ^top-state.hand <hand>
              ^operator.name construct-hand)
-->
   # add the block
   (<hand> ^block <L4>)
   # name it and create orientation
   # TODO color?
   (<L4> ^name L4 ^orientation <O1>)
   # add squares to orientation
   (<O1> ^base yes ^square <S1> <S2> <S3> <S4>)
   # fill in square info
   (<S1> ^x 0 ^y 0)
   (<S2> ^x 0 ^y 1)
   (<S3> ^x 1 ^y 0)
   (<S4> ^x 2 ^y 0)
}

# elaborate other orientations
# create the other orientation structure for (r2, reflection) blocks
sp {elaborate*block*orientation*r2*reflection
   (state <s> ^hand.block <block>)
   (<block> -^symmetry r1
             ^orientation (<base> ^base yes))
-->
   (<block> ^orientation <Or1>)
   (<Or1> ^rotation yes
          ^from <base>)
}
# create rotation structures for non r2 blocks
sp {elaborate*block*orientation*no*r2
   (state <s> ^hand.block <block>)
   (<block> -^symmetry r2
             ^orientation <base> <r1>)
   (<base> ^base yes)
   (<r1> ^rotation yes ^from <base>)
-->
   (<block> ^orientation <r2> <r3>)
   (<r2> ^rotation yes ^from <r1>)
   (<r3> ^rotation yes ^from <r2>)
}
# create reflected structures for non ref block
sp {elaborate*block*orientation*no*ref
   (state <s> ^hand.block <block>)
   (<block> -^symmetry reflection
             ^orientation <or>)
   (<or> ^<< base rotation >>)
   (<or> -^reflection yes)
-->
   (<block> ^orientation <reflected>)
   (<reflected> ^reflection yes
                ^from <or>)
}
# copy squares with rotations
sp {elaborate*copy*and*transform*squares*rotations
   (state <s> ^hand.block <block>)
   (<block> ^orientation <base> <rotation>)
   (<base> ^square (<sq> ^x <x> ^y <y>))
   (<rotation> ^rotation yes
               ^from <base>)
-->
   (<rotation> ^square <rsq>)
   (<rsq> ^x (- 0 <y>) ^y <x>)
}
# copy squares with reflections
sp {elaborate*copy*and*transform*square*reflection
   (state <s> ^hand.block <block>)
   (<block> ^orientation <base> <reflection>)
   (<base> ^square (<sq> ^x <x> ^y <y>))
   (<reflection> ^reflection yes
                 ^from <base>)
-->
   (<reflection> ^square <rsq>)
   (<rsq> ^x (- 0 <x>) ^y <y>)
}

# apply that we are done initializing
sp {apply*init*done
   (state <s> ^disable yes ^name initialize-soar-blokus
              ^operator.name construct-hand
              ^top-state <ts>)
   # check for whatever the last thing done is
   (<ts> ^hand.block <block>)
   (<block> ^name l5 ^orientation.square <sq>)
   (<sq> ^x 4 ^y 0 ^corner ne se)
-->
   (<ts> ^init done
         ^name soar-blokus)
}